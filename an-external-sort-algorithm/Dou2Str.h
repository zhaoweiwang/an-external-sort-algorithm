/********************************************************
filename：		Dou2Str.h
author：		Mako Wan
date：	2014-3-25
description：		实现将浮点数转成字符串的功能
********************************************************/

#ifndef DOU2STR_H
#define DOU2STR_H

#define  F_MAXPRECISION   9       //要求精度9
#define  F_CONEXPONENT    0x03ff    //指数偏移量 
#define  DECIMAL_EXP(exponent)  ((((exponent - F_CONEXPONENT) * 0x4d10) >> 16) + 1)

typedef unsigned char Byte;
typedef Byte *LPBYTE;
typedef unsigned __int64 UINT64, *PUINT64; 
typedef double *PEXTENDED;

typedef struct
{
	short    exponent;    /* 指数（整数位数） */
	Byte     negative;    /* 负数（0正，1负）*/
	char     digits[20];    /* 十进制整数字串 */
}FloatRec;

static const UINT64 _tab0[] =  
{  
	{0x3FF0000000000000},   /* 10**0 */  
	{0x4024000000000000},   /* 10**1 */  
	{0x4059000000000000},   /* 10**2 */  
	{0x408F400000000000},   /* 10**3 */  
	{0x40C3880000000000},   /* 10**4 */  
	{0x40F86A0000000000},   /* 10**5 */  
	{0x412E848000000000},   /* 10**6 */  
	{0x416312D000000000},   /* 10**7 */  
	{0x4197D78400000000},   /* 10**8 */  
	{0x41CDCD6500000000},   /* 10**9 */  
	{0x4202A05F20000000},   /* 10**10 */  
	{0x42374876E8000000},   /* 10**11 */  
	{0x426D1A94A2000000},   /* 10**12 */  
	{0x42A2309CE5400000},   /* 10**13 */  
	{0x42D6BCC41E900000},   /* 10**14 */  
	{0x430C6BF526340000},   /* 10**15 */  
	{0x4341C37937E08000},   /* 10**16 */  
	{0x4376345785D8A000},   /* 10**17 */  
	{0x43ABC16D674EC800},   /* 10**18 */  
	{0x43E158E460913D00},   /* 10**19 */  
	{0x4415AF1D78B58C40},   /* 10**20 */  
	{0x444B1AE4D6E2EF50},   /* 10**21 */  
	{0x4480F0CF064DD592},   /* 10**22 */  
	{0x44B52D02C7E14AF6},   /* 10**23 */  
	{0x44EA784379D99DB4},   /* 10**24 */  
	{0x45208B2A2C280290},   /* 10**25 */  
	{0x4554ADF4B7320334},   /* 10**26 */  
	{0x4589D971E4FE8401},   /* 10**27 */  
	{0x45C027E72F1F1281},   /* 10**28 */  
	{0x45F431E0FAE6D721},   /* 10**29 */  
	{0x46293E5939A08CE9},   /* 10**30 */  
	{0x465F8DEF8808B023}    /* 10**31 */  
};  

static const UINT64 _tab1[] =  
{  
	{0x4693B8B5B5056E17},   /* 10**32 */  
	{0x4D384F03E93FF9F5},   /* 10**64 */  
	{0x53DDF67562D8B363},   /* 10**96 */  
	{0x5A827748F9301D32},   /* 10**128 */  
	{0x6126C2D4256FFCC3},   /* 10**160 */  
	{0x67CC0E1EF1A724EB},   /* 10**192 */  
	{0x6E714A52DFFC679A},   /* 10**224 */  
	{0x75154FDD7F73BF3C},   /* 10**256 */  
	{0x7BBA44DF832B8D46},   /* 10**288 */  
};  

static const double _conPrec = 1.0E10;  

static const UINT64 _cvttab[F_MAXPRECISION +1] =  
{   
	0x00000003B9ACA00,      //9
	0x000000005F5E100,      //8
	0x000000000989680,      //7
	0x0000000000F4240,      //6
	0x0000000000186A0,      //5
	0x000000000002710,      //10^4
	0x0000000000003E8,      //10^3
	0x000000000000064,      //10^2
	0x00000000000000A,      //10^1
	0x000000000000001       //10^0 
};  


/*
函数名：	Float2Str
功能：	将浮点数转换成字符串
输入：	参数1： 字符串空间    参数2： 浮点数
输出：   双精度浮点数字符串长度
*/
int Dou2Str(char * StrBuf, double Num);

#endif